create or replace package Attr_API is


  TYPE Attr_Tab_ IS TABLE OF Attr_Obj;

  FUNCTION  Get_Attr_Table ( attr_ IN XML_Obj , name_ IN VARCHAR2) RETURN Attr_Tab PIPELINED;
  FUNCTION  Get_Attr_Table ( attr_ IN CLOB    , name_ IN VARCHAR2) RETURN Attr_Tab PIPELINED;
  FUNCTION  Get_Attr_Table ( attr_ IN Attr_Obj, name_ IN VARCHAR2) RETURN Attr_Tab;
  FUNCTION  Get_Attr_Table_( attr_ IN Attr_Obj, name_ IN VARCHAR2) RETURN Attr_Tab_;

  PROCEDURE Add_Attr_Table ( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab);
  PROCEDURE Add_Attr_Table ( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab_);

  PROCEDURE Set_Attr_Table ( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab);
  PROCEDURE Set_Attr_Table ( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab_);

  FUNCTION Attr  RETURN Attr_Obj;
  FUNCTION AttrS RETURN AttrS_Obj;
  FUNCTION AttrTab  RETURN Attr_Tab;


  PROCEDURE Add_Row( tab_ IN OUT NOCOPY Attr_Tab, attr_ IN OUT NOCOPY Attr_Obj);
  
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN VARCHAR2);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN NUMBER);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN DATE);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY CLOB);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY BLOB);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Obj);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab);
  PROCEDURE Add( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab_);

  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN VARCHAR2);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN NUMBER);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN DATE);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY CLOB);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY BLOB);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Obj);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab);
  PROCEDURE SET( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2, value_ IN OUT NOCOPY Attr_Tab_);

  FUNCTION Get        ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN VARCHAR2;
  FUNCTION Get        ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN VARCHAR2;
  FUNCTION GetN       ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN NUMBER;
  FUNCTION GetN       ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN NUMBER;
  FUNCTION GetD       ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN DATE;
  FUNCTION GetD       ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN DATE;
  FUNCTION GetT       ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN DATE;
  FUNCTION GetT       ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN DATE;
  FUNCTION GetCLob    ( attr_ IN Attr_Obj, idx_ IN PLS_INTEGER) RETURN CLOB;
  FUNCTION GetCLob    ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN CLOB;
  FUNCTION GetBLob    ( attr_ IN Attr_Obj, idx_ IN PLS_INTEGER) RETURN BLOB;
  FUNCTION GetBLob    ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN BLOB;
  FUNCTION Get_Record ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN Attr_Obj;
  FUNCTION Get_Record ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN Attr_Obj;
  FUNCTION Get_Table  ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER)RETURN Attr_Tab;
  FUNCTION Get_Table  ( attr_ IN Attr_Obj, name_ IN VARCHAR2)   RETURN Attr_Tab;

  PROCEDURE Del( attr_ IN OUT NOCOPY Attr_Obj, name_ IN VARCHAR2);
  PROCEDURE Del( attr_ IN OUT NOCOPY Attr_Obj, idx_  IN PLS_INTEGER);
  PROCEDURE Clear( attr_ IN OUT NOCOPY Attr_Obj );

  FUNCTION Get_Type   ( attr_ IN Attr_Obj, name_ IN VARCHAR2   ) RETURN VARCHAR2;
  FUNCTION Get_Type   ( attr_ IN Attr_Obj, idx_  IN PLS_INTEGER) RETURN VARCHAR2;
  FUNCTION Idx        ( attr_ IN Attr_Obj, name_ IN VARCHAR2 ) RETURN PLS_INTEGER;


  PROCEDURE Add( attr_ IN OUT NOCOPY AttrS_Obj, name_ IN VARCHAR2, value_ IN VARCHAR2);
  PROCEDURE SET( attr_ IN OUT NOCOPY AttrS_Obj, name_ IN VARCHAR2, value_ IN VARCHAR2);
  PROCEDURE Del( attr_ IN OUT NOCOPY AttrS_Obj, name_ IN VARCHAR2);
  PROCEDURE Del( attr_ IN OUT NOCOPY AttrS_Obj, idx_  IN PLS_INTEGER);
  PROCEDURE Clear( attr_ IN OUT NOCOPY AttrS_Obj );

  FUNCTION Get        ( attr_ IN AttrS_Obj, idx_  IN PLS_INTEGER) RETURN VARCHAR2;
  FUNCTION Get        ( attr_ IN AttrS_Obj, name_ IN VARCHAR2)    RETURN VARCHAR2;
  FUNCTION Idx        ( attr_ IN AttrS_Obj, name_ IN VARCHAR2 ) RETURN PLS_INTEGER;


  PROCEDURE Clear_All_Cache;
  FUNCTION  Create_Idx_Cache( names_ IN OUT NOCOPY string_tab     ) RETURN PLS_INTEGER;  -- return hash_cache_id_
  FUNCTION  Create_Idx_Cache( names_ IN OUT NOCOPY name_tab       ) RETURN PLS_INTEGER;  -- return hash_cache_id_
  FUNCTION  Idx_Cache       ( hash_  IN NUMBER, name_ IN VARCHAR2 ) RETURN PLS_INTEGER;

  FUNCTION Get_Record ( xml_ IN OUT NOCOPY Xml_Obj, path_ IN VARCHAR2)   RETURN Attr_Obj;
    
end Attr_API;
/
