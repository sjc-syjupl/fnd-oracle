create or replace package SAP_API IS
  ---------------------  CONNECTION -------------------------------
  PROCEDURE Init; 
  PROCEDURE Clear;
  
  PROCEDURE Set_User    ( user_ IN VARCHAR2, password_ IN VARCHAR2 );  
  PROCEDURE Set_Url_WSDL( url_ IN VARCHAR2 );                   --  http://34.245.215.155:8000/sap/bc/soap/wsdl11
  PROCEDURE Set_Url_Rfc ( url_ IN VARCHAR2 );                   --  http://34.245.215.155:8000/sap/bc/soap/rfc
  PROCEDURE Set_Url     ( url_ IN VARCHAR2 );                   --  http://34.245.215.155:8000
  PROCEDURE Set_Client  ( new_clinet_ IN VARCHAR2 );            --  800

  FUNCTION Ping RETURN NUMBER;                                  -- ping time in sec
  
  ---------------------  CACHE -------------------------------
  PROCEDURE Clear_Cache;
  FUNCTION  Query_From_Cache( cache_id_ IN NUMBER ) RETURN AttrS_tab PIPELINED;
  
  ---------------------  CONVERT -------------------------------
  FUNCTION Str_To_Number   ( value_ IN VARCHAR2 ) RETURN NUMBER;
  FUNCTION Str_To_Date     ( value_ IN VARCHAR2 ) RETURN DATE;
  FUNCTION Str_To_Time     ( value_ IN VARCHAR2, date_ IN DATE DEFAULT SYSDATE ) RETURN DATE;
  FUNCTION Str_To_Date_Time( date_  IN VARCHAR2, time_ IN VARCHAR2 ) RETURN DATE;
  
  FUNCTION Number_To_Str( value_ IN NUMBER   ) RETURN VARCHAR2;
  FUNCTION Date_To_Str  ( value_ IN DATE     ) RETURN VARCHAR2;
  FUNCTION Time_To_Str  ( value_ IN DATE     ) RETURN VARCHAR2;
  
  FUNCTION Sap_Str_Date ( value_ IN DATE     ) RETURN VARCHAR2;
  FUNCTION Sap_Str_Date ( value_ IN VARCHAR2 ) RETURN VARCHAR2;

  FUNCTION List_Str_Number( value_ IN VARCHAR2 ) RETURN VARCHAR2;
  FUNCTION List_Str_Date  ( value_ IN VARCHAR2, format_ IN VARCHAR2 DEFAULT 'YYYY-MM-DD' ) RETURN VARCHAR2;
  FUNCTION List_Str_Time  ( value_ IN VARCHAR2, format_ IN VARCHAR2 DEFAULT 'YYYY-MM-DD HH24:MI:SS' ) RETURN VARCHAR2;

  ---------------------  DESCRIPTION -------------------------------  
  PROCEDURE Show_Xml ( show_ IN BOOLEAN DEFAULT TRUE );

  TYPE RFC_DESC_REC IS RECORD (
        NAME           VARCHAR2(200),
        param_type     VARCHAR2(50),
        data_type      VARCHAR2(50),
        data_length    VARCHAR2(20),
        optional       VARCHAR2(20),
        description    VARCHAR2(2000),
        help           VARCHAR2(4000)
  );
  TYPE RFC_DESC_TAB IS TABLE OF RFC_DESC_REC;

  TYPE QUICK_QUERY_REC IS RECORD (
                          S01 VARCHAR2(200), S02 VARCHAR2(200), S03 VARCHAR2(200), S04 VARCHAR2(200), S05 VARCHAR2(200), S06 VARCHAR2(200), S07 VARCHAR2(200), S08 VARCHAR2(200), S09 VARCHAR2(200),
       S10 VARCHAR2(200), s11 VARCHAR2(200), s12 VARCHAR2(200), s13 VARCHAR2(200), s14 VARCHAR2(200), s15 VARCHAR2(200), s16 VARCHAR2(200), s17 VARCHAR2(200), s18 VARCHAR2(200), s19 VARCHAR2(200),
       S20 VARCHAR2(200), s21 VARCHAR2(200), s22 VARCHAR2(200), s23 VARCHAR2(200), s24 VARCHAR2(200), s25 VARCHAR2(200), s26 VARCHAR2(200), s27 VARCHAR2(200), s28 VARCHAR2(200), s29 VARCHAR2(200),
       S30 VARCHAR2(200), S31 VARCHAR2(200), S32 VARCHAR2(200), S33 VARCHAR2(200), S34 VARCHAR2(200), S35 VARCHAR2(200), S36 VARCHAR2(200), S37 VARCHAR2(200), S38 VARCHAR2(200), S39 VARCHAR2(200),
       s40 VARCHAR2(200), s41 VARCHAR2(200), s42 VARCHAR2(200), s43 VARCHAR2(200), s44 VARCHAR2(200), s45 VARCHAR2(200), s46 VARCHAR2(200), s47 VARCHAR2(200), s48 VARCHAR2(200), s49 VARCHAR2(200),
       s50 VARCHAR2(200), s51 VARCHAR2(200), s52 VARCHAR2(200), s53 VARCHAR2(200), s54 VARCHAR2(200), s55 VARCHAR2(200), s56 VARCHAR2(200), s57 VARCHAR2(200), s58 VARCHAR2(200), s59 VARCHAR2(200),
       s60 VARCHAR2(200), s61 VARCHAR2(200), s62 VARCHAR2(200), s63 VARCHAR2(200), s64 VARCHAR2(200), s65 VARCHAR2(200), s66 VARCHAR2(200), s67 VARCHAR2(200), s68 VARCHAR2(200), s69 VARCHAR2(200),
       s70 VARCHAR2(200), s71 VARCHAR2(200), s72 VARCHAR2(200), s73 VARCHAR2(200), s74 VARCHAR2(200), s75 VARCHAR2(200), s76 VARCHAR2(200), s77 VARCHAR2(200), s78 VARCHAR2(200), s79 VARCHAR2(200),
       s80 VARCHAR2(200), s81 VARCHAR2(200), s82 VARCHAR2(200), s83 VARCHAR2(200), s84 VARCHAR2(200), s85 VARCHAR2(200), s86 VARCHAR2(200), s87 VARCHAR2(200), s88 VARCHAR2(200), s89 VARCHAR2(200),
       s90 VARCHAR2(200), s91 VARCHAR2(200), s92 VARCHAR2(200), s93 VARCHAR2(200), s94 VARCHAR2(200), s95 VARCHAR2(200), s96 VARCHAR2(200), s97 VARCHAR2(200), s98 VARCHAR2(200), s99 VARCHAR2(200)
  );
  TYPE QUICK_QUERY_TAB IS TABLE OF QUICK_QUERY_REC;

  
  FUNCTION RFC_List     ( fuFND_name_like_   IN VARCHAR2,
                          description_like_ IN VARCHAR2,
                          area_             IN VARCHAR2 DEFAULT NULL,
                          all_fuFND_         IN VARCHAR2 DEFAULT 'N',
                          language_         IN VARCHAR2 DEFAULT 'E' ) RETURN two_string_tab PIPELINED;
  FUNCTION RFC_Detail   ( rfc_name_         IN VARCHAR2 ) RETURN RFC_DESC_TAB PIPELINED;
  FUNCTION RFC_Source   ( rfc_name_         IN VARCHAR2 ) RETURN CLOB;

  FUNCTION Table_List   ( table_name_like_  IN VARCHAR2,
                          description_like_ IN VARCHAR2,
                          empty_tables_     IN VARCHAR2 DEFAULT 'Y',
                          language_         IN VARCHAR2 DEFAULT 'L' ) RETURN two_string_tab PIPELINED;
                         -- first char in description:   '*' - some records exist,        '-' - table is empty

  FUNCTION Column_List   ( table_name_like_  IN VARCHAR2,
                           description_like_ IN VARCHAR2,
                           empty_tables_     IN VARCHAR2 DEFAULT 'N',
                           language_         IN VARCHAR2 DEFAULT 'L' ) RETURN two_string_tab PIPELINED;

  FUNCTION Table_Detail ( table_name_       IN VARCHAR2,
                          print_reference_  IN VARCHAR2 DEFAULT 'N',
                          language_         IN VARCHAR2 DEFAULT 'L',
                          ref_              IN VARCHAR2 DEFAULT NULL ) RETURN RFC_DESC_TAB PIPELINED;

  FUNCTION Quick_Query   ( table_name_    IN VARCHAR2,            
                           columns_       IN VARCHAR2 DEFAULT '',
                           where_         IN VARCHAR2 DEFAULT '',
                           max_rows_      IN NUMBER   DEFAULT 500,
                           start_field_nr_ IN NUMBER DEFAULT 1  ) RETURN QUICK_QUERY_TAB PIPELINED;
  /*
    SELECT * FROM Table(SAP_API.Rfc_List( '%PROJ%', '%' ));
    SELECT * FROM Table(SAP_API.Rfc_Detail( 'BAPI_PROJECT_GETINFO' ));

    SELECT SAP_API.Rfc_Source( 'BAPI_PROJECT_GETINFO' ) FROM DUAL;

    SELECT * FROM TABLE( Sap_API.Table_List('LT%', '%' ) );
    SELECT * FROM TABLE( Sap_API.Table_Detail('TFDIR') );
    SELECT * FROM TABLE( Sap_API.Quick_Query('TFDIR') );
  */

  ---------------------  READ TABLE -------------------------------  
  TYPE SELECT_QUERY_REC IS RECORD (
                          S01 VARCHAR2(200), S02 VARCHAR2(200), S03 VARCHAR2(200), S04 VARCHAR2(200), S05 VARCHAR2(200), S06 VARCHAR2(200), S07 VARCHAR2(200), S08 VARCHAR2(200), S09 VARCHAR2(200),
       S10 VARCHAR2(200), s11 VARCHAR2(200), s12 VARCHAR2(200), s13 VARCHAR2(200), s14 VARCHAR2(200), s15 VARCHAR2(200), s16 VARCHAR2(200), s17 VARCHAR2(200), s18 VARCHAR2(200), s19 VARCHAR2(200),
       S20 VARCHAR2(200), s21 VARCHAR2(200), s22 VARCHAR2(200), s23 VARCHAR2(200), s24 VARCHAR2(200), s25 VARCHAR2(200), s26 VARCHAR2(200), s27 VARCHAR2(200), s28 VARCHAR2(200), s29 VARCHAR2(200),
       S30 VARCHAR2(200), S31 VARCHAR2(200), S32 VARCHAR2(200), S33 VARCHAR2(200), S34 VARCHAR2(200), S35 VARCHAR2(200), S36 VARCHAR2(200), S37 VARCHAR2(200), S38 VARCHAR2(200), S39 VARCHAR2(200)
  );
  TYPE SELECT_QUERY_TAB IS TABLE OF SELECT_QUERY_REC;
  
  FUNCTION Query_(table_name_   IN VARCHAR2,
                  columns_      IN VARCHAR2,
                  where_        IN VARCHAR2,
                  max_rows_     IN NUMBER DEFAULT 1000,
                  sub_query1_   IN AttrS_Obj DEFAULT NULL,
                  sub_query2_   IN AttrS_Obj DEFAULT NULL,
                  sub_query3_   IN AttrS_Obj DEFAULT NULL,
                  sub_query4_   IN AttrS_Obj DEFAULT NULL,
                  sub_query5_   IN AttrS_Obj DEFAULT NULL ) RETURN SELECT_QUERY_TAB PIPELINED;

                  
  FUNCTION Query         ( table_name_    IN VARCHAR2,
                           columns_       IN VARCHAR2,
                           where_         IN VARCHAR2,
                           where_list_    IN text_tab DEFAULT NULL,  --only when length( where_ ) > 4000
                           max_rows_      IN NUMBER DEFAULT 1000,
                           skip_          IN VARCHAR2 DEFAULT 'N', -- Y/N
                           name_cache_    IN VARCHAR2 DEFAULT 'Y',
                           sub_query1_    IN AttrS_Obj DEFAULT NULL,
                           sub_query2_    IN AttrS_Obj DEFAULT NULL,
                           sub_query3_    IN AttrS_Obj DEFAULT NULL,
                           sub_query4_    IN AttrS_Obj DEFAULT NULL,
                           sub_query5_    IN AttrS_Obj DEFAULT NULL,
                           sub_query6_    IN AttrS_Obj DEFAULT NULL,
                           sub_query7_    IN AttrS_Obj DEFAULT NULL,
                           sub_query8_    IN AttrS_Obj DEFAULT NULL  ) RETURN AttrS_Tab PIPELINED;
  FUNCTION Query_In_Background( table_name_   IN VARCHAR2,
                           columns_       IN VARCHAR2,
                           where_         IN VARCHAR2,
                           max_rows_      IN NUMBER DEFAULT 1000,
                           sub_query1_    IN AttrS_Obj DEFAULT NULL,
                           sub_query2_    IN AttrS_Obj DEFAULT NULL,
                           sub_query3_    IN AttrS_Obj DEFAULT NULL,
                           sub_query4_    IN AttrS_Obj DEFAULT NULL,
                           sub_query5_    IN AttrS_Obj DEFAULT NULL ) RETURN NUMBER;
  /*
    FND_Api.Wait_For_Job( session_id_, throw_error_ => 'Y' );
    
    SELECT S01, S02, ...
      FROM FND_SESSION_DATA_TAB 
     WHERE data_type= 'SAP' 
       AND session_id = session_id_
       
    FND_Api.Clean_Job( session_id_ );
  */
  FUNCTION Quick_Value   ( table_name_    IN VARCHAR2,            
                           return_column_ IN VARCHAR2 DEFAULT '',
                           value_column_  IN VARCHAR2 DEFAULT '',
                           value_         IN VARCHAR2 DEFAULT '',
                           where_         IN VARCHAR2 DEFAULT ''  ) RETURN VARCHAR2;
  
  FUNCTION Record_Exists ( table_name_    IN VARCHAR2,                          -- check in Table 
                           where_         IN VARCHAR2 ) RETURN VARCHAR2;        -- TRUE/FALSE  
                                                      
  FUNCTION Record_Exists ( rfc_name_      IN VARCHAR2,                          -- check in rfc
                           param_table_   IN VARCHAR2,
                           query_         IN VARCHAR2,
                           record_table_  IN VARCHAR2 ) RETURN VARCHAR2;        -- TRUE/FALSE
                           
  FUNCTION Sub_Query     ( table_name_     IN VARCHAR2,
                           columns_        IN VARCHAR2,
                           join_columns_   IN VARCHAR2,
                           where_          IN VARCHAR2,
                           pre_load_where_ IN VARCHAR2 DEFAULT NULL,
                           use_cache_      IN VARCHAR2 DEFAULT 'Y',
                           exists_         IN VARCHAR2 DEFAULT NULL, -- Y / N
                           mode_           IN VARCHAR2 DEFAULT NULL  -- MAX / MIN / SUM / COUNT / EXISTS / NOT EXISTS / LIST / SKIP 
                                                                     -- IN / NOT IN 
                          ) RETURN AttrS_Obj;
    /* Only a few columns can be returned. A string containing all columns must be less than 512 chars.
    SELECT t.Get('WAREHOUSE')            warehouse,
           t.Get('TRANSPORT_ORDER_NO')   transport_order_no,
           t.Get('MOVMENT_TYPE')         movment_type,
           t.Get('MOVMENT_TYPE_DESC')    movment_type_desc,
           t.Get('WM_MOVMANT_TYPE')      wm_movment_type,
           t.Get('WM_MOVMANT_TYPE_DESC') wm_movment_type_desc,
           t.Get('SHIPMENT_TYPE')        shipment_type,
           t.Get('SHIP_DESCRIPTION')     shipment_type_desc,
           t.Get('SALES_DOC_NO')         sales_doc_no,
           t.Get('REQ_NO')               req_no,
           t.Get('MATERIAL_DOC_NO')      material_doc_no,
           t.Get('REQ_NO2')              req2_no,
           t.Get('ADD_REFERENCE')        add_reference,
           t.Get('REQ_TYPE')             req_type
      FROM  TABLE( Sap_Api.Query(  table_name_ => 'LTAK', -- WM transfer order header
                                   columns_ => '
                                                LGNUM=>WAREHOUSE, 
                                                TANUM=>TRANSPORT_ORDER_NO, 
                                                BWART=>MOVMENT_TYPE, 
                                                BWLVS=>WM_MOVMANT_TYPE, 
                                                VBELN=>SALES_DOC_NO, 
                                                TRART=>SHIPMENT_TYPE, 
                                                TBNUM=>REQ_NO, 
                                                MBLNR=>MATERIAL_DOC_NO, 
                                                BENUM=>REQ_NO2, 
                                                LZNUM=>ADD_REFERENCE, 
                                                BDART=>REQ_TYPE 
                                                ',
                                   where_   => '',
                                   max_rows_=> 10000,
                                   sub_query1_ => Sap_Api.Sub_Query( table_name_    => 'PRELOAD: T156HT', --Main Text for Movement Type
                                                                     columns_       => 'BTEXT=>MOVMENT_TYPE_DESC'
                                                                     join_columns_  => 'MANDT, BWART'
                                                                     where_         => q'[SPRAS = 'E' ]'),
                                   sub_query2_ => Sap_Api.Sub_Query( table_name_    => 'T333T', -- Texts for WM Movement Types
                                                                     columns_       => 'LBWAT=>WM_MOVMANT_TYPE_DESC'
                                                                     join_columns_  => 'MANDT, LGNUM, BWLVS'
                                                                     where_         => q'[SPRAS = 'E' ]' ),
                                   sub_query3_ => Sap_Api.Sub_Query( table_name_    => 'T333B', -- Texts for Transfer Types
                                                                     columns_       => 'TRATX=>SHIP_DESCRIPTION'
                                                                     join_columns_  => 'MANDT, LGNUM, TRART'
                                                                     where_         => q'[SPRAS = 'E' ]' )
                                       )) t ;


    SELECT s01         "warehouse",
           s02         "transport_order_no",
           s03         "movment_type",
           s20         "movment_type_desc",
           s04         "wm_movment_type",
           s21         "wm_movment_type_desc",
           s06         "shipment_type",
           s22         "shipment_type_desc",
           s05         "sales_doc_no",
           s07         "req_no",
           s08         "material_doc_no",
           s09         "req2_no",
           s10         "add_reference",
           s11         "req_type"
      FROM  TABLE( Sap_Api.Query_( table_name_ => 'LTAK', -- WM transfer order header
                                   columns_ => '
                                                LGNUM=>WAREHOUSE         :1, 
                                                TANUM=>TRANSPORT_ORDER_NO:2, 
                                                BWART=>MOVMENT_TYPE      :3, 
                                                BWLVS=>WM_MOVMANT_TYPE   :4, 
                                                VBELN=>SALES_DOC_NO      :5, 
                                                TRART=>SHIPMENT_TYPE     :6, 
                                                TBNUM=>REQ_NO            :7, 
                                                MBLNR=>MATERIAL_DOC_NO   :8, 
                                                BENUM=>REQ_NO2           :9, 
                                                LZNUM=>ADD_REFERENCE     :10, 
                                                BDART=>REQ_TYPE          :11 
                                                ',
                                   where_   => '',
                                   max_rows_=> 10000,
                                   sub_query1_ => Sap_Api.Sub_Query( table_name_    => 'PRELOAD: T156HT', --Main Text for Movement Type
                                                                     columns_       => 'BTEXT=>MOVMENT_TYPE_DESC     :20'
                                                                     join_columns_  => 'MANDT, BWART'
                                                                     where_         => q'[SPRAS = 'E' ]'),
                                   sub_query2_ => Sap_Api.Sub_Query( table_name_    => 'T333T', -- Texts for WM Movement Types
                                                                     columns_       => 'LBWAT=>WM_MOVMANT_TYPE_DESC  :21'
                                                                     join_columns_  => 'MANDT, LGNUM, BWLVS'
                                                                     where_         => q'[SPRAS = 'E' ]' ),
                                   sub_query3_ => Sap_Api.Sub_Query( table_name_    => 'T333B', -- Texts for Transfer Types
                                                                     columns_       => 'TRATX=>SHIP_DESCRIPTION      :22'
                                                                     join_columns_  => 'MANDT, LGNUM, TRART'
                                                                     where_         => q'[SPRAS = 'E' ]' )
                                       )) t ;



  SELECT Sap_Api.Record_Exists( table_name_ => 'TFDIR',                          
                                where_      => '(FMODE = ''R'') AND (FUNCNAME = ''BAPI_PROJECTDEF_GETLIST'')' )
  FROM DUAL;
  
  SELECT Sap_Api.Record_Exists( rfc_name_     => 'BAPI_PROJECTDEF_GETLIST',                          
                                param_table_  => 'PROJECT_DEFINITION_RANGE', 
                                query_        => '0%',
                                record_table_ => 'PROJECT_DEFINITION_LIST' )
  FROM DUAL;
  
  
  */

  ---------------------  PARAMS -------------------------------  
  PROCEDURE Add_Param( param_ IN OUT NOCOPY Attr_Obj, 
                       param_name01_ IN VARCHAR2  DEFAULT NULL, param_value01_ IN VARCHAR2 DEFAULT NULL,
                       param_name02_ IN VARCHAR2  DEFAULT NULL, param_value02_ IN VARCHAR2 DEFAULT NULL,
                       param_name03_ IN VARCHAR2  DEFAULT NULL, param_value03_ IN VARCHAR2 DEFAULT NULL,
                       param_name04_ IN VARCHAR2  DEFAULT NULL, param_value04_ IN VARCHAR2 DEFAULT NULL,
                       param_name05_ IN VARCHAR2  DEFAULT NULL, param_value05_ IN VARCHAR2 DEFAULT NULL,
                       param_name06_ IN VARCHAR2  DEFAULT NULL, param_value06_ IN VARCHAR2 DEFAULT NULL,
                       param_name07_ IN VARCHAR2  DEFAULT NULL, param_value07_ IN VARCHAR2 DEFAULT NULL,
                       param_name08_ IN VARCHAR2  DEFAULT NULL, param_value08_ IN VARCHAR2 DEFAULT NULL,
                       param_name09_ IN VARCHAR2  DEFAULT NULL, param_value09_ IN VARCHAR2 DEFAULT NULL,
                       param_name10_ IN VARCHAR2  DEFAULT NULL, param_value10_ IN VARCHAR2 DEFAULT NULL,
                       param_name11_ IN VARCHAR2  DEFAULT NULL, param_value11_ IN VARCHAR2 DEFAULT NULL,
                       param_name12_ IN VARCHAR2  DEFAULT NULL, param_value12_ IN VARCHAR2 DEFAULT NULL,
                       param_name13_ IN VARCHAR2  DEFAULT NULL, param_value13_ IN VARCHAR2 DEFAULT NULL,
                       param_name14_ IN VARCHAR2  DEFAULT NULL, param_value14_ IN VARCHAR2 DEFAULT NULL,
                       param_name15_ IN VARCHAR2  DEFAULT NULL, param_value15_ IN VARCHAR2 DEFAULT NULL,
                       param_name16_ IN VARCHAR2  DEFAULT NULL, param_value16_ IN VARCHAR2 DEFAULT NULL,
                       param_name17_ IN VARCHAR2  DEFAULT NULL, param_value17_ IN VARCHAR2 DEFAULT NULL,
                       param_name18_ IN VARCHAR2  DEFAULT NULL, param_value18_ IN VARCHAR2 DEFAULT NULL,
                       param_name19_ IN VARCHAR2  DEFAULT NULL, param_value19_ IN VARCHAR2 DEFAULT NULL,
                       param_name20_ IN VARCHAR2  DEFAULT NULL, param_value20_ IN VARCHAR2 DEFAULT NULL
                       );
  PROCEDURE Add_Param_Not_Null( param_ IN OUT NOCOPY Attr_Obj, 
                       param_name_ IN VARCHAR2, param_value_ IN VARCHAR2 );
  PROCEDURE Add_Param_Diff( param_ IN OUT NOCOPY Attr_Obj, param_x_ IN OUT NOCOPY Attr_Obj, 
                       param_name_ IN VARCHAR2, old_param_value_ IN VARCHAR2, new_param_value_ IN VARCHAR2 );
  PROCEDURE Add_Param_Update( param_ IN OUT NOCOPY Attr_Obj, param_x_ IN OUT NOCOPY Attr_Obj, 
                       param_name_ IN VARCHAR2, param_value_ IN VARCHAR2);
  FUNCTION Exist_Any_Param( param_ IN OUT NOCOPY Attr_Obj ) RETURN BOOLEAN;
                       
   
  FUNCTION Param_Query( name_ IN VARCHAR2, query_ IN VARCHAR2 DEFAULT NULL ) RETURN Attr_Obj;
  FUNCTION Param( name_ IN VARCHAR2,
          p01_ IN VARCHAR2 DEFAULT NULL, v01_ IN VARCHAR2 DEFAULT NULL,
          p02_ IN VARCHAR2 DEFAULT NULL, v02_ IN VARCHAR2 DEFAULT NULL,
          p03_ IN VARCHAR2 DEFAULT NULL, v03_ IN VARCHAR2 DEFAULT NULL,
          p04_ IN VARCHAR2 DEFAULT NULL, v04_ IN VARCHAR2 DEFAULT NULL,
          p05_ IN VARCHAR2 DEFAULT NULL, v05_ IN VARCHAR2 DEFAULT NULL,
          p06_ IN VARCHAR2 DEFAULT NULL, v06_ IN VARCHAR2 DEFAULT NULL,
          p07_ IN VARCHAR2 DEFAULT NULL, v07_ IN VARCHAR2 DEFAULT NULL,
          p08_ IN VARCHAR2 DEFAULT NULL, v08_ IN VARCHAR2 DEFAULT NULL,
          p09_ IN VARCHAR2 DEFAULT NULL, v09_ IN VARCHAR2 DEFAULT NULL,
          p10_ IN VARCHAR2 DEFAULT NULL, v10_ IN VARCHAR2 DEFAULT NULL,
          p11_ IN VARCHAR2 DEFAULT NULL, v11_ IN VARCHAR2 DEFAULT NULL,
          p12_ IN VARCHAR2 DEFAULT NULL, v12_ IN VARCHAR2 DEFAULT NULL,
          p13_ IN VARCHAR2 DEFAULT NULL, v13_ IN VARCHAR2 DEFAULT NULL,
          p14_ IN VARCHAR2 DEFAULT NULL, v14_ IN VARCHAR2 DEFAULT NULL,
          p15_ IN VARCHAR2 DEFAULT NULL, v15_ IN VARCHAR2 DEFAULT NULL,
          p16_ IN VARCHAR2 DEFAULT NULL, v16_ IN VARCHAR2 DEFAULT NULL,
          p17_ IN VARCHAR2 DEFAULT NULL, v17_ IN VARCHAR2 DEFAULT NULL,
          p18_ IN VARCHAR2 DEFAULT NULL, v18_ IN VARCHAR2 DEFAULT NULL,
          p19_ IN VARCHAR2 DEFAULT NULL, v19_ IN VARCHAR2 DEFAULT NULL,
          p20_ IN VARCHAR2 DEFAULT NULL, v20_ IN VARCHAR2 DEFAULT NULL
                                                                           ) RETURN Attr_Obj;

  ---------------------  CALL -------------------------------  
  FUNCTION Call_Tab( 
                 rfc_name_   IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL,
                 path_       IN VARCHAR2 DEFAULT NULL,
                 cache_time_ IN NUMBER DEFAULT 0,      -- how long keep query in a cache, in seconds
                 sub_query1_ IN AttrS_Obj DEFAULT NULL,
                 sub_query2_ IN AttrS_Obj DEFAULT NULL,
                 sub_query3_ IN AttrS_Obj DEFAULT NULL,
                 sub_query4_ IN AttrS_Obj DEFAULT NULL,
                 sub_query5_ IN AttrS_Obj DEFAULT NULL      ) RETURN AttrS_tab PIPELINED;

  FUNCTION Call_Tab_In_Background( 
                 rfc_name_   IN VARCHAR2,
                 columns_    IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL,
                 path_       IN VARCHAR2 DEFAULT NULL,
                 sub_query1_ IN AttrS_Obj DEFAULT NULL,
                 sub_query2_ IN AttrS_Obj DEFAULT NULL,
                 sub_query3_ IN AttrS_Obj DEFAULT NULL,
                 sub_query4_ IN AttrS_Obj DEFAULT NULL,
                 sub_query5_ IN AttrS_Obj DEFAULT NULL        ) RETURN NUMBER;
                 
  FUNCTION Call_Tab( session_id_ IN NUMBER,
                     path_       IN VARCHAR2 DEFAULT NULL )     RETURN AttrS_tab PIPELINED;

  FUNCTION Call_Quick_Tab( 
                 rfc_name_   IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL,
                 path_       IN VARCHAR2 DEFAULT NULL,
                 cache_time_ IN NUMBER DEFAULT 0,      -- how long keep query in a cache, in seconds
                 sub_query1_ IN AttrS_Obj DEFAULT NULL,
                 sub_query2_ IN AttrS_Obj DEFAULT NULL,
                 sub_query3_ IN AttrS_Obj DEFAULT NULL,
                 sub_query4_ IN AttrS_Obj DEFAULT NULL,
                 sub_query5_ IN AttrS_Obj DEFAULT NULL      ) RETURN QUICK_QUERY_TAB PIPELINED;

  FUNCTION Call_Obj( 
                 rfc_name_ IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL,
                 path_       IN VARCHAR2 DEFAULT NULL,
                 cache_time_ IN NUMBER DEFAULT 0        -- how long keep query in a cache, in seconds
                                                                ) RETURN xml_obj;
  FUNCTION Call_Obj( session_id_ IN NUMBER                      ) RETURN xml_obj;

  FUNCTION Call_Obj_In_Background( 
                 rfc_name_ IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL,
                 path_       IN VARCHAR2 DEFAULT NULL           ) RETURN NUMBER;

  FUNCTION Call_Values( 
                 rfc_name_   IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL             ) RETURN two_string_tab PIPELINED;
                 
  PROCEDURE Add_Rfc( 
                 rfc_        IN OUT NOCOPY attr_tab,
                 rfc_name_   IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL);

  FUNCTION Exec_Tab( rfc_         IN OUT NOCOPY attr_tab, 
                     path_        IN VARCHAR2,
                     cache_time_  IN NUMBER DEFAULT 0   -- how long keep query in a cache, in seconds   
                                                       ) RETURN Attr_Tab PIPELINED;
  FUNCTION Exec_Obj( rfc_         IN OUT NOCOPY attr_tab, 
                     path_        IN VARCHAR2 DEFAULT NULL,
                     cache_time_  IN NUMBER DEFAULT 0,   -- how long keep query in a cache, in seconds
                     request_xml_ IN CLOB DEFAULT NULL
                                                       ) RETURN Xml_Obj;
  ---------------------  Attachment ----------------------------  
  
  TYPE ATTACHMENT_REC IS RECORD (
        relation_type         VARCHAR2(10),
        object_type           VARCHAR2(32), 
        object_no             VARCHAR2(32), 
        short_description     VARCHAR2(50), 
        user_create           VARCHAR2(30), 
        user_owner            VARCHAR2(30), 
        create_date           DATE, 
        document_type         VARCHAR2(3),
        document_id           VARCHAR2(70), 
        file_extension        VARCHAR2(3),
        file_size             NUMBER,
        file_data             BLOB
  );
  TYPE ATTACHMENT_TAB IS TABLE OF ATTACHMENT_REC;

  FUNCTION Read_Attachment_File_Data( doc_id_ IN VARCHAR2 ) RETURN BLOB;
  FUNCTION Read_Attachment ( document_id_ IN VARCHAR2 )               RETURN ATTACHMENT_REC;
  FUNCTION Read_Attachment_( object_type_    IN VARCHAR2 DEFAULT '%', 
                             object_no_      IN VARCHAR2 DEFAULT '%',
                             client_         IN VARCHAR2 DEFAULT NULL,
                             document_id_    IN VARCHAR2 DEFAULT NULL,
                             read_file_data_ IN VARCHAR2 DEFAULT 'N' ) RETURN ATTACHMENT_TAB PIPELINED;

  FUNCTION Add_Attachment  ( object_type_    IN VARCHAR2, 
                             object_no_      IN VARCHAR2,
                             description_    IN VARCHAR2,
                             file_extension_ IN VARCHAR2,
                             file_data_      IN OUT NOCOPY BLOB,
                             folder_id_      IN VARCHAR2 DEFAULT NULL,
                             language_       IN VARCHAR2 DEFAULT 'L', -- 'PL'
                             rel_client_     IN VARCHAR2 DEFAULT NULL ) RETURN VARCHAR2; -- document_id_
  PROCEDURE Remove_Attachment( document_id_ IN VARCHAR2 );


  ---------------------  CALL XML (for debug only) ----------------------------  
  FUNCTION Call_XML( 
                 rfc_name_   IN VARCHAR2,
                 param1_     IN Attr_Obj DEFAULT NULL,
                 param2_     IN Attr_Obj DEFAULT NULL,
                 param3_     IN Attr_Obj DEFAULT NULL,
                 param4_     IN Attr_Obj DEFAULT NULL,
                 param5_     IN Attr_Obj DEFAULT NULL,
                 param6_     IN Attr_Obj DEFAULT NULL,
                 param7_     IN Attr_Obj DEFAULT NULL,
                 param8_     IN Attr_Obj DEFAULT NULL,
                 param9_     IN Attr_Obj DEFAULT NULL ) RETURN CLOB;


  ---------------------  Cache ----------------------------  

  FUNCTION Add_Cache( cache_type_      IN VARCHAR2, --  FULL / CACHE
                      table_name_      IN VARCHAR2,
                      columns_key_     IN VARCHAR2,
                      columns_         IN VARCHAR2,
                      where_           IN VARCHAR2,
                      next_update_sec_ IN VARCHAR2 DEFAULT 86400,
                      wait_            IN VARCHAR2 DEFAULT 'N' ) RETURN NUMBER;

  PROCEDURE Remove_Cache( table_name_ IN VARCHAR2 );
  PROCEDURE Remove_Cache( cache_id_   IN NUMBER );

  PROCEDURE Refresh_Cache(table_name_ IN VARCHAR2 );
  PROCEDURE Refresh_Cache(cache_id_   IN NUMBER );

  PROCEDURE Refresh_All_Caches;
  PROCEDURE Refresh_Cache_At_Night;


  ---------------------  QUERY -------------------------------  
  /*
  

  SELECT  
      n.*
  FROM TABLE( SAP_API.Call_Struct('BAPI_PROJECTDEF_GETLIST',
--  FROM TABLE( SAP_API.Call_Values('BAPI_PROJECTDEF_GETLIST',
                                SAP_API.Param('PROJECT_DEFINITION_RANGE', 
                                      '_',      '',                    -- next row
                                      'SIGN',   'I',
                                      'OPTION', 'CP',
                                      'LOW',    '0*',
                                      '_',      '',                     -- next row
                                      'SIGN',   'I',
                                      'OPTION', 'CP',
                                      'LOW',    'E*' 
                                      ),
                                SAP_API.Param('PROJECT_DEFINITION_LIST')
                           )) n;
       
  SELECT  
      n.*
--  FROM TABLE( SAP_API.Call_Struct('BAPI_PROJECTDEF_GETLIST',
  FROM TABLE( SAP_API.Call_Values('BAPI_PROJECTDEF_GETLIST',
                                SAP_API.Param_Query('PROJECT_DEFINITION_RANGE', '0%;E%' ),
                                SAP_API.Param('PROJECT_DEFINITION_LIST')
                           )) n;

         
  SELECT  
      li.Get( 'PROJECT_DEFINITION' )  PROJECT_DEFINITION,
      li.Get( 'DESCRIPTION' )         DESCRIPTION
  FROM TABLE( SAP_API.Call_Tab('BAPI_PROJECTDEF_GETLIST',
                                SAP_API.Param('PROJECT_DEFINITION_RANGE', 
                                      '_',      '',                    -- next row
                                      'SIGN',   'I',
                                      'OPTION', 'CP',
                                      'LOW',    '0*',
                                      '_',      '',                     -- next row
                                      'SIGN',   'I',
                                      'OPTION', 'CP',
                                      'LOW',    'E*' 
                                      ),
                                SAP_API.Param('PROJECT_DEFINITION_LIST'),
                                path_ => 'BAPI_PROJECTDEF_GETLIST/PROJECT_DEFINITION_LIST'
                           )) li;

  SELECT  
      li.Get( 'PROJECT_DEFINITION' )  PROJECT_DEFINITION,
      li.Get( 'DESCRIPTION' )         DESCRIPTION
  FROM TABLE( SAP_API.Call_Tab('BAPI_PROJECTDEF_GETLIST',
                                SAP_API.Param_Query('PROJECT_DEFINITION_RANGE', '0%;E%' ),
                                SAP_API.Param_Query('DESCRIPTION_RANGE', '%Project%' ),
                                SAP_API.Param('PROJECT_DEFINITION_LIST'),
                                path_ => 'BAPI_PROJECTDEF_GETLIST/PROJECT_DEFINITION_LIST'
                           )) li;
       
       
 SELECT  
      pdef.Get( 'PROJECT_DEFINITION' )    PROJECT_DEFINITION,
      pdef.Get( 'DESCRIPTION' )           DESCRIPTION,
      pdef.Get( 'START' )                 START_DATE,
      pdef.Get( 'FINISH' )                FINISH_DATE,
      wbs.Get ( 'WBS_ELEMENT' )           WBS_ELEMENT,
      wbs.Get ( 'DESCRIPTION' )           WBS_DESCRIPTION,
      act.Get ( 'NETWORK' )               ACT_NETWORK,
      act.Get ( 'ACTIVITY' )              ACT_ACTIVITY,
      act.Get ( 'PLANT' )                 ACT_PLANT      
  FROM TABLE( SAP_API.Call_Tab('BAPI_PROJECT_GETINFO',
                                SAP_API.Param( '', 
                                    p01_ => 'PROJECT_DEFINITION', v01_ => 'E-2226',
                                    p02_ => 'WITH_ACTIVITIES',    v02_ => 'I'
                                    ),
                                SAP_API.Param('E_ACTIVITY_TABLE'),
                                SAP_API.Param('E_WBS_ELEMENT_TABLE'),
                                SAP_API.Param('E_WBS_HIERARCHIE_TABLE')
                            )) bapi,
       TABLE( Attr_API.Get_Attr_Table( bapi.This(), 'BAPI_PROJECT_GETINFO/E_PROJECT_DEFINITION') ) pdef,
       TABLE( Attr_API.Get_Attr_Table( bapi.This(), 'BAPI_PROJECT_GETINFO/E_ACTIVITY_TABLE') ) act,
       TABLE( Attr_API.Get_Attr_Table( bapi.This(), 'BAPI_PROJECT_GETINFO/E_WBS_ELEMENT_TABLE') ) wbs
  WHERE act.Get( 'WBS_ELEMENT' ) = wbs.Get( 'WBS_ELEMENT' ) ;      

  -------------------------------------------------------------------------------------------------------------------------

  DECLARE
     rfc_        Attr_Obj;
  BEGIN
     rfc_ := SAP_API.Call_Obj( 'BAPI_PROJECT_GETINFO',
                                SAP_API.Param( '', 
                                    p01_ => 'PROJECT_DEFINITION', v01_ => 'E-2226',
                                    p02_ => 'WITH_ACTIVITIES',    v02_ => 'I'
                                    ),
                                SAP_API.Param('E_ACTIVITY_TABLE'),
                                SAP_API.Param('E_WBS_ELEMENT_TABLE'),
                                SAP_API.Param('E_WBS_HIERARCHIE_TABLE')
                            );
     FOR act_ IN (SELECT act.Get( 'NETWORK' )  network,
                         act.Get( 'ACTIVITY' ) activity,
                         act.Get( 'PLANT' )    plant  
                    FROM TABLE( Attr_API.Get_Attr_Table( rfc_, 'E_ACTIVITY_TABLE') ) act  ) LOOP
         NULL;
     END LOOP;     

     FOR wbs_ IN (SELECT  wbs.Get ( 'WBS_ELEMENT' )           WBS_ELEMENT,
                          wbs.Get ( 'DESCRIPTION' )           WBS_DESCRIPTION
                    FROM TABLE( Attr_API.Get_Attr_Table( rfc_, 'E_WBS_ELEMENT_TABLE') ) wbs ) LOOP
         NULL;
     END LOOP;     
  END;
  
         
  DECLARE
      rfc_         Attr_Tab;
      status_      VARCHAR2(200);
  BEGIN
      rfc_ := Attr_Tab();
      SAP_API.Add_Rfc( rfc_, 'BAPI_PS_INITIALIZATION' );
      SAP_API.Add_Rfc( rfc_, 'BAPI_BUS2001_SET_STATUS', 
                         SAP_API.Param( '', 
                              p01_ => 'PROJECT_DEFINITION', v01_ => 'E-2226',
                              p02_ => 'SET_SYSTEM_STARTUS', v02_ => 'CLSD'   -- set close status
                         ) );
      SAP_API.Add_Rfc( rfc_, 'BAPI_PS_PRECOMMIT' );
      SAP_API.Add_Rfc( rfc_, 'BAPI_TRANSACTION_COMMIT' );
      SAP_API.Exec( rfc_ );
      
      status_ := rfc_.Get_Record( 'BAPI_BUS2001_SET_STATUS' ).Get_Record( 'E_RESULT' ).Get( 'STATUS_TYPE' );  -- status for one bapi 
      status_ := rfc_.Get_Record( 'E_RESULT' ).Get( 'STATUS_TYPE' );                                          -- status for all bapi 
  END;  

  */

  ---------------------  QUERY IN BACKGROUND -------------------------------  
  /*

    DECLARE
       session_id_  NUMBER;
    BEGIN
       session_id_ := SAP_API.Call_Tab_In_Background('BAPI_PROJECTDEF_GETLIST',
                                          'PROJECT_DEFINITION, DESCRIPTION',
                                    SAP_API.Param('PROJECT_DEFINITION_RANGE',
                                          '_',      '',                    -- next row
                                          'SIGN',   'I',
                                          'OPTION', 'CP',
                                          'LOW',    '0*',
                                          '_',      '',                     -- next row
                                          'SIGN',   'I',
                                          'OPTION', 'CP',
                                          'LOW',    'E*'
                                          ),
                                    SAP_API.Param('PROJECT_DEFINITION_LIST'),
                                    path_ => 'BAPI_PROJECTDEF_GETLIST/PROJECT_DEFINITION_LIST'
                               );
       DBMS_output.put_line( session_id_ );
       --:out_session_id := session_id_;
    END;                           

    SELECT
          li.Get( 'PROJECT_DEFINITION' )  PROECT_DEFINITION,
          li.Get( 'DESCRIPTION' )         DESCRIPTION
      FROM TABLE( SAP_API.Call_Tab( session_id_ => 122) ) li;
  */
  

  ---------------------  MODIFY DATA -------------------------------  
  /*
    PROCEDURE New_Project   ( project_ IN OUT NOCOPY PROJECT_DETAIL_REC ) IS
       tab_         Attr_Tab;
       ret_         Xml_Obj;
       param_       Attr_Obj;       
    BEGIN
        FND_Api.Log( 'SAP New_Project:', project_.PROJECT_DEFINITION );
        IF Sap_Api.Record_Exists( rfc_name_     => 'BAPI_PROJECTDEF_GETLIST',                          
                                  param_table_  => 'PROJECT_DEFINITION_RANGE', 
                                  query_        =>  project_.PROJECT_DEFINITION,
                                  record_table_ => 'PROJECT_DEFINITION_LIST' ) = 'TRUE' THEN
            Error_Api.Record_Exist( 'SAP_PROJECT_API', project_.PROJECT_DEFINITION );
        END IF;
        
        param_ := Sap_Api.Param( 'PROJECT_DEFINITION_STRU' );
        
        Sap_API.Add_Param( param_, 'PROJECT_DEFINITION', project_.PROJECT_DEFINITION );
        Sap_API.Add_Param( param_, 'DESCRIPTION',        project_.DESCRIPTION );
        Sap_API.Add_Param( param_, 'MASK_ID',            project_.MASK_ID );
        
        tab_ := Attr_Tab();
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_INITIALIZATION' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_PROJECTDEF_CREATE', param_ );
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_PRECOMMIT' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_TRANSACTION_COMMIT' );
        ret_ := Sap_Api.Exec_Obj( tab_ );
    END;

    PROCEDURE Modify_Project( project_ IN OUT NOCOPY PROJECT_DETAIL_REC ) IS
       tab_         Attr_Tab;
       ret_         Xml_Obj;
       param1_      Attr_Obj;
       param2_      Attr_Obj;
       old_project_ PROJECT_DETAIL_REC;
    BEGIN
        FND_Api.Log( 'SAP Modify_Project:', project_.PROJECT_DEFINITION );
        IF Sap_Api.Record_Exists( rfc_name_     => 'BAPI_PROJECTDEF_GETLIST',                          
                                  param_table_  => 'PROJECT_DEFINITION_RANGE', 
                                  query_        =>  project_.PROJECT_DEFINITION,
                                  record_table_ => 'PROJECT_DEFINITION_LIST' ) != 'TRUE' THEN
            Error_Api.Record_Not_Exist( 'SAP_PROJECT_API', project_.PROJECT_DEFINITION );
        END IF;

        param1_ := Sap_Api.Param( 'I_PROJECT_DEFINITION' );
        param2_ := Sap_Api.Param( 'I_PROJECT_DEFINITION_UPD' );
        
        Sap_API.Add_Param_Update( param1_, param2_, 'DESCRIPTION', project_.DESCRIPTION );
        Sap_API.Add_Param_Update( param1_, param2_, 'MASK_ID',     project_.MASK_ID );

        Sap_API.Add_Param( param2_, 'PROJECT_DEFINITION', project_.PROJECT_DEFINITION );
            
        tab_ := Attr_Tab();
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_INITIALIZATION' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_BUS2001_CHANGE', param1_, param2_ );
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_PRECOMMIT' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_TRANSACTION_COMMIT' );
        ret_ := Sap_Api.Exec_Obj( tab_ );
    END;
    
    PROCEDURE Remove_Project( project_id_ IN VARCHAR2 ) IS
       tab_         Attr_Tab;
       ret_         Xml_Obj;
       param_       Attr_Obj;
    BEGIN
        FND_Api.Log( 'SAP Remove_Project:', project_id_ );
        IF Sap_Api.Record_Exists( rfc_name_     => 'BAPI_PROJECTDEF_GETLIST',                          
                                  param_table_  => 'PROJECT_DEFINITION_RANGE', 
                                  query_        =>  project_id_,
                                  record_table_ => 'PROJECT_DEFINITION_LIST' ) != 'TRUE' THEN
            Error_Api.Record_Not_Exist( 'SAP_PROJECT_API', project_id_ );
        END IF;
        param_ := Sap_Api.Param( '', 
                                 'I_PROJECT_DEFINITION', project_id_ );
        
        tab_ := Attr_Tab();
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_INITIALIZATION' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_BUS2001_DELETE', param_ );
        Sap_Api.Add_Rfc( tab_, 'BAPI_PS_PRECOMMIT' );
        Sap_Api.Add_Rfc( tab_, 'BAPI_TRANSACTION_COMMIT' );
        ret_ := Sap_Api.Exec_Obj( tab_ );
    END;
  */                     

    
END SAP_API;
/
